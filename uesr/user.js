// user.js - ‡∏£‡∏∞‡∏ö‡∏ö User ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô

let notifications = [];
let currentFilter = 'all';

const typeIcons = {
    'news': 'üì∞',
    'event': 'üéâ',
    'announcement': 'üì¢',
    'promotion': 'üè∑Ô∏è',
    'recruitment': 'üë•',
    'education': 'üìö'
};

const typeNames = {
    'news': '‡∏Ç‡πà‡∏≤‡∏ß‡∏™‡∏≤‡∏£',
    'event': '‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°',
    'announcement': '‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®',
    'promotion': '‡πÇ‡∏õ‡∏£‡πÇ‡∏°‡∏ä‡∏±‡πà‡∏ô',
    'recruitment': '‡∏£‡∏±‡∏ö‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏á‡∏≤‡∏ô',
    'education': '‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤'
};

// ‡πÇ‡∏´‡∏•‡∏î‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏à‡∏≤‡∏Å localStorage
function loadNotifications() {
    notifications = JSON.parse(localStorage.getItem('notifications') || '[]');
    displayNotifications();
    updateUnreadCount();
}

// ‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
function displayNotifications() {
    const container = document.getElementById('notificationsContainer');
    
    // ‡∏Å‡∏£‡∏≠‡∏á‡∏ï‡∏≤‡∏°‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç
    let filteredNotifications = notifications.filter(notification => {
        if (currentFilter === 'all') return true;
        if (currentFilter === 'read') return notification.isRead;
        if (currentFilter === 'unread') return !notification.isRead;
        return notification.type === currentFilter;
    });

    if (filteredNotifications.length === 0) {
        container.innerHTML = `
            <div class="empty-state">
                <div style="font-size: 3em; margin-bottom: 15px;">üì≠</div>
                <h3>‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô</h3>
                <p>‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å</p>
            </div>
        `;
        return;
    }

    container.innerHTML = filteredNotifications.map(notification => `
        <div class="notification-item ${notification.isRead ? 'read' : 'unread'}">
            <div style="display: flex; justify-content: space-between; align-items: flex-start; margin-bottom: 10px;">
                <div class="notification-type type-${notification.type}">
                    ${typeIcons[notification.type]} ${typeNames[notification.type]}
                </div>
                <div class="status-indicator ${notification.isRead ? 'status-read' : 'status-unread'}"></div>
            </div>
            
            <div class="notification-title">${notification.title}</div>
            <div class="notification-content">${notification.content}</div>
            
            <div class="notification-footer">
                <div class="notification-time">‚è∞ ${formatDate(notification.time)}</div>
                <div class="notification-actions">
                    ${!notification.isRead ? 
                        `<button class="action-btn-small read" onclick="markAsRead(${notification.id})">‡∏≠‡πà‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß</button>` : 
                        `<button class="action-btn-small" onclick="markAsUnread(${notification.id})">‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏≠‡πà‡∏≤‡∏ô</button>`
                    }
                    <button class="action-btn-small delete" onclick="deleteNotification(${notification.id})">‡∏•‡∏ö</button>
                </div>
            </div>
        </div>
    `).join('');
}

// ‡∏à‡∏±‡∏î‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà
function formatDate(dateString) {
    const date = new Date(dateString.replace(' ', 'T'));
    const now = new Date();
    const diffInHours = Math.floor((now - date) / (1000 * 60 * 60));

    if (diffInHours < 1) return '‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏™‡∏±‡∏Å‡∏Ñ‡∏£‡∏π‡πà';
    if (diffInHours < 24) return `${diffInHours} ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á‡∏ó‡∏µ‡πà‡πÅ‡∏•‡πâ‡∏ß`;

    const diffInDays = Math.floor(diffInHours / 24);
    if (diffInDays < 7) return `${diffInDays} ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏•‡πâ‡∏ß`;

    return date.toLocaleDateString('th-TH');
}

// ‡∏ó‡∏≥‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏´‡∏°‡∏≤‡∏¢‡∏≠‡πà‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß
function markAsRead(id) {
    const notification = notifications.find(n => n.id === id);
    if (notification) {
        notification.isRead = true;
        saveNotifications();
        displayNotifications();
        updateUnreadCount();
    }
}

// ‡∏ó‡∏≥‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏´‡∏°‡∏≤‡∏¢‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏≠‡πà‡∏≤‡∏ô
function markAsUnread(id) {
    const notification = notifications.find(n => n.id === id);
    if (notification) {
        notification.isRead = false;
        saveNotifications();
        displayNotifications();
        updateUnreadCount();
    }
}

// ‡∏≠‡πà‡∏≤‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
function markAllAsRead() {
    notifications.forEach(n => n.isRead = true);
    saveNotifications();
    displayNotifications();
    updateUnreadCount();
}

// ‡∏•‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
function deleteNotification(id) {
    if (confirm('‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?')) {
        notifications = notifications.filter(n => n.id !== id);
        saveNotifications();
        displayNotifications();
        updateUnreadCount();
    }
}

// ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏•‡∏á localStorage
function saveNotifications() {
    localStorage.setItem('notifications', JSON.stringify(notifications));
}

// ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏≠‡πà‡∏≤‡∏ô
function updateUnreadCount() {
    const unreadCount = notifications.filter(n => !n.isRead).length;
    document.getElementById('unreadCount').textContent = unreadCount;
    
    // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó title ‡∏Ç‡∏≠‡∏á‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö
    document.title = unreadCount > 0 ? 
        `(${unreadCount}) User - ‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô` : 
        'User - ‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô';
}

// ‡πÅ‡∏™‡∏î‡∏á‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÉ‡∏´‡∏°‡πà
function showNewNotificationAlert() {
    const alert = document.getElementById('newNotificationAlert');
    alert.classList.add('show');
    
    setTimeout(() => {
        alert.classList.remove('show');
    }, 3000);
}

// ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÉ‡∏´‡∏°‡πà
function checkForNewNotifications() {
    const lastCheck = localStorage.getItem('lastNotificationCheck') || '0';
    const newNotificationTime = localStorage.getItem('newNotification') || '0';
    
    if (newNotificationTime > lastCheck) {
        // ‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÉ‡∏´‡∏°‡πà
        loadNotifications();
        showNewNotificationAlert();
        localStorage.setItem('lastNotificationCheck', Date.now().toString());
    }
}

// Event Listeners
document.addEventListener('DOMContentLoaded', function() {
    // ‡πÇ‡∏´‡∏•‡∏î‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
    loadNotifications();
    
    // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ filter buttons
    document.querySelectorAll('.filter-btn').forEach(btn => {
        btn.addEventListener('click', function() {
            document.querySelectorAll('.filter-btn').forEach(b => b.classList.remove('active'));
            this.classList.add('active');
            currentFilter = this.dataset.filter;
            displayNotifications();
        });
    });
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏∏‡∏Å 2 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
    setInterval(checkForNewNotifications, 2000);
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÄ‡∏°‡∏∑‡πà‡∏≠ localStorage ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á (‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ tab ‡∏≠‡∏∑‡πà‡∏ô‡πÄ‡∏õ‡∏¥‡∏î‡∏≠‡∏¢‡∏π‡πà)
    window.addEventListener('storage', function(e) {
        if (e.key === 'newNotification') {
            checkForNewNotifications();
        }
    });
});

// ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Admin ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ó‡∏î‡∏™‡∏≠‡∏ö (‡∏•‡∏ö‡∏≠‡∏≠‡∏Å‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏à‡∏£‡∏¥‡∏á)
function addTestNotification() {
    const testTypes = ['news', 'event', 'announcement', 'promotion'];
    const testNotification = {
        id: Date.now(),
        type: testTypes[Math.floor(Math.random() * testTypes.length)],
        title: '‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ó‡∏î‡∏™‡∏≠‡∏ö #' + Math.floor(Math.random() * 1000),
        content: '‡∏ô‡∏µ‡πà‡∏Ñ‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö Admin ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô',
        time: new Date().toISOString().replace('T', ' ').substring(0, 19),
        isRead: false,
        sentBy: 'admin',
        sentAt: new Date().toISOString()
    };
    
    notifications.unshift(testNotification);
    saveNotifications();
    localStorage.setItem('newNotification', Date.now().toString());
    displayNotifications();
    updateUnreadCount();
}